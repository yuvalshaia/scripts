#! /bin/bash

qemu=./qemu/x86_64-softmmu/qemu-system-x86_64
images_dir=./disks
base_image=pvrdma-fc27-0.qcow2
vnc_ip=ca-dev66.us.oracle.com

mem=8G
cpus=4
snapshot="-snapshot"
hdb=""

if [ $# -ne 3 ]
then
	echo "Usage: $0 mng_if roce_if ipv6_idx"
	exit 1
fi

ifconfig ${eth} > /dev/null 2>&1
if [ $? -ne 0 ];
then
	echo "Can't find interface ${eth}"
	exit 2
fi

mng_eth=$1
eth=$2
idx=$3

name="${eth}-${idx}"

log=/tmp/qemu_${eth}_${idx}.log

vm_img_file=pvrdma-${eth}-${idx}.qcow2
if [ ! -f ${images_dir}/${vm_img_file} ];
then
	cd ${images_dir}
	qemu-img create -f qcow2 -o backing_file=${base_image} ${vm_img_file}
	cd -
fi

ipv6=$(ifconfig ${eth}|grep inet6|grep -n fe80|grep ^${idx}|awk '{print $3}')

s=$(echo ${ipv6}|awk -F:: '{print $2}')
s=$(echo ${s}|awk -F: '{print $1}')
backend_dev=$(ls /sys/class/net/${eth}/device/infiniband)
fn=$(grep -l1 ${s} /sys/class/net/${eth}/device/infiniband/${backend_dev}/ports/1/gids/*)
# We take the odd entry since it supports RoCE v2
backend_gid_idx=$(basename $(grep -l1 ${s} /sys/class/net/${eth}/device/infiniband/${backend_dev}/ports/1/gids/*|tail -1))

# If this is RXE setup thhen start from gid 3
if [ $(ethtool -i ${eth}|grep driver|grep mlx|wc -l) -eq 0 ];
then
	macvtap_idx=$((${idx} - 2))
else
	macvtap_idx=${idx} 
fi

backend_port=1
pci_addr_roce=10
pci_addr_local=11

uniq_id=$((0x$(sha1sum <<<${eth}${idx}|cut -c1-2)))
vnc=${vnc_ip}:${uniq_id}
tcp_port=$((10000 + ${uniq_id}))
#tcp_port=1002${idx}

pvrdma_args="-device pvrdma,addr=${pci_addr_roce}.1,backend-dev=${backend_dev},backend-gid-idx=${backend_gid_idx},backend-port=${backend_port}"

macvtap_mac="$(ip addr show dev ${eth}_${macvtap_idx}|grep ether|awk '{print $2}')"
# Make MAC from GID
f1=$(cat /sys/class/infiniband/${backend_dev}/ports/${backend_port}/gids/${backend_gid_idx}|awk -F: '{print substr($5,1,2)}')
f1=$((0x$f1 ^ 2))
f1=$(printf "%x\n" ${f1})
f2=$(cat /sys/class/infiniband/${backend_dev}/ports/${backend_port}/gids/${backend_gid_idx}|awk -F: '{print substr($5,3,2)}')
f3=$(cat /sys/class/infiniband/${backend_dev}/ports/${backend_port}/gids/${backend_gid_idx}|awk -F: '{print substr($6,1,2)}')
f4=$(cat /sys/class/infiniband/${backend_dev}/ports/${backend_port}/gids/${backend_gid_idx}|awk -F: '{print substr($7,3,2)}')
f5=$(cat /sys/class/infiniband/${backend_dev}/ports/${backend_port}/gids/${backend_gid_idx}|awk -F: '{print substr($8,1,2)}')
f6=$(cat /sys/class/infiniband/${backend_dev}/ports/${backend_port}/gids/${backend_gid_idx}|awk -F: '{print substr($8,3,2)}')
pvrdma_mac="${f1}:${f2}:${f3}:${f4}:${f5}:${f6}"

eth_for_pvrdma="-netdev user,id=id0,hostfwd=tcp::${tcp_port}-:22 -device vmxnet3,addr=${pci_addr_roce},multifunction=on,mac=${pvrdma_mac},netdev=id0"

eth_for_macvtap="-netdev tap,id=tap0,fd=3 3<>/dev/tap$(cat /sys/class/net/${eth}_${macvtap_idx}/ifindex) -device e1000,addr=${pci_addr_local},mac=${macvtap_mac},netdev=tap0"

cmd="$qemu -name ${name} ${snapshot} -display vnc=${vnc} -object memory-backend-ram,id=mb1,size=${mem},share -numa node,memdev=mb1 -m ${mem} -smp ${cpus} --enable-kvm -hda ${images_dir}/${vm_img_file} ${hdb} ${pvrdma_args} ${eth_for_pvrdma} ${eth_for_macvtap} >${log} &"

rm -f /tmp/exec.$$
echo ${cmd} > /tmp/exec.$$
chmod +x /tmp/exec.$$
/tmp/exec.$$ &
rm -f /tmp/exec.$$
