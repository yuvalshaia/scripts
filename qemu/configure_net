add_ipv6_to_if()
{
	eth=$1
	macvtap=$2

	#ifconfig ens3 add fe80::5054:00ff:fe12:2457/64
	# Extract first byte
	f=$(ifconfig ${macvtap}|grep ether|awk '{print $2}'|awk -F: '{print $1}')
	# XOR it with 2
	f=$((0x$f ^ 2))
	# Reformat to HEX
	f=$(printf "%x\n" ${f})
	ipv6=$(ifconfig ${macvtap}|grep ether|awk '{print $2}'|awk -v f1=$f -F: '{print "fe80::"f1$2":"$3"ff:fe"$4":"$5$6"/64"}')
	ifconfig ${eth} add $ipv6
}

create_macvtap()
{
	eth=$1
	name=$2
	ip link add link ${eth} name ${name} type macvtap mode bridge
	ip link set ${name} up
	chmod a+r /dev/tap$(cat /sys/class/net/${name}/ifindex) /sys/class/net/${name}/ifindex
	chmod a+w /dev/tap$(cat /sys/class/net/${name}/ifindex) /sys/class/net/${name}/ifindex
}

if [ "x$1" == "x" ];
then
	echo "Usage $0 ifname"
	exit 1
fi

ifconfig $1 > /dev/null 2>&1
if [ $? -ne 0 ];
then
	echo "Can't find interface $1"
	exit 2
fi

eth=$1
echo "rxe net_dev=${eth}"

# Create macvtap device for each VM
create_macvtap ${eth} macvtap1
create_macvtap ${eth} macvtap2

# Add IP6v (reverse order - for rxe gid indexing)
add_ipv6_to_if ${eth} macvtap2
add_ipv6_to_if ${eth} macvtap1

# Routing
IP=$(ip address show dev ${eth} | grep "inet " | awk '{print $2}')
NETWORK=$(ip -o route | grep ${eth} | grep -v default | awk '{print $1}')
GATEWAY=$(ip -o route | grep default | awk '{print $3}')

ip link add link ${eth} macvlan0 type macvlan mode bridge
ip address add ${IP} dev macvlan0
ip link set macvlan0 up

ip route flush dev ${eth}
ip route flush dev macvlan0
ip route add ${NETWORK} dev macvlan0 metric 0
ip route add default via $GATEWAY

# IB Modules
modprobe ib_core; modprobe ib_umad; modprobe rdma_ucm; modprobe ib_uverbs;

# RXE
modprobe rdma_rxe;
echo ${eth} > /sys/module/rdma_rxe/parameters/add
echo "rxe gid table"
cat /sys/class/infiniband/rxe0/ports/1/gids/[0-4]
